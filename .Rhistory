library(tidyr)
library(tidyverse)
movies2 = movies2 %>%
mutate(profits = revenue -budget)
summary(movies2$profits)
max_profit_movie = movies2[which.max(movies2$profits), "title"]
print(max_profit_movie)
max_profit = max(movies2$profits)
min_profit_movie = movies2[which.min(movies2$profits), "title"]
print(min_profit_movie)
min_profit = min(movies2$profits)
movies2$quartile = cut(movies2$profits, breaks = quantile(movies2$profits, probs = c(0, 0.25,0.5, 0.75, 1)), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
library(ggplot2)
ggplot(movies2, aes(x = quartile, y = profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movie Profits by Quartile", x = "Quartile", y = "Profits")
#Here I make a new variable with the log transformed profits
movies2 = movies2 %>%
mutate(log_profits = log(profits))
#Here I compute the mean but we were not sure to remove the NAs or not so in the first one we did not remove it and in the second we did to see if we would get different answers
mean(movies2$log_profits)
mean(movies2$log_profits, na.rm = T)
knitr::opts_chunk$set(echo = TRUE)
#Here I compute the mean but we were not sure to remove the NAs or not so in the first one we did not remove it and in the second we did to see if we would get different answers
mean(movies2$log_profits)
mean(movies2$log_profits, na.rm = T)
#Here I compute the mean but we were not sure to remove the NAs or not so in the first one we did not remove it and in the second we did to see if we would get different answers
mean(movies2$log_profits)
mean(movies2$log_profits, na.rm = T)
View(movies2)
getOption("repos")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Here I am importing the dataset of movies 2
install.packages("readr")
library(readr)
movies2 = read_tsv("movies2.tsv")
#Here I am computing the number of observations, variables and subjects
ncol(movies2)
nrow(movies2)
knitr::opts_chunk$set(echo = TRUE)
movies2 = read_tsv("movies2.tsv")
library(readr)
movies2 = read_tsv("movies2.tsv")
View(movies2)
#WRITE YOUR CODE HERE
library(dplyr)
actor = movies2 %>%
count(first_actor, sort = T) %>%
head(1)
print(actor)
View(actor)
load("~/GitHub/Assignment-Group-8-QRMII-R/.RData")
#WRITE YOUR CODE HERE
average_rev_Bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(av_rev_Bruce = mean(revenue))
View(average_rev_Bruce)
average_rev_generally = movies2 %>%
summarise(rev_gen = mean(revenue))
View(average_rev_generally)
movies2 = movies2 %>%
mutate(profits = revenue -budget)
#WRITE YOUR CODE HERE
movies2$profits = movies2$profits/1e6
#WRITE YOUR CODE HERE
movies2$profits = round(movies2$profits/1e6, 2)
#WRITE YOUR CODE HERE
movies2$profits = round(movies2$profits/1e6)
#WRITE YOUR CODE HERE
movies2$profits = movies2$profits/1e6
movies2 = movies2 %>%
mutate(profits = revenue -budget)
#WRITE YOUR CODE HERE
movies2$profits = movies2$profits/1000000
var_profits = movies2 %>%
summarise(var_profits = var(profits))
View(var_profits)
print(average_rev_generally)
print(average_rev_Bruce)
print(var_profits)
#WRITE YOUR CODE HERE
movies_sample = sample(nrow(movies2), 25)
#WRITE YOUR CODE HERE
set.seed(123)
movies_sample = sample(nrow(movies2), 25)
movies_sample = sample(nrow(movies2), 25)
#WRITE YOUR CODE HERE
set.seed(123)
movies_sample = sample(nrow(movies2), 25)
#WRITE YOUR CODE HERE
set.seed(123)
movies_sample = sample(nrow(movies2), 25)
var_sample = var(movies_sample)
print(var_sample)
movies_sample = movies2[sample(nrow(movies2), 25),]
View(movies_sample)
var_sample_profits = var(movies2$profits)
print(var_sample)
#WRITE YOUR CODE HERE
set.seed(123)
movies_sample = movies2[sample(nrow(movies2), 25),]
var_sample_profits = var(movies2$profits)
print(var_sample)
#WRITE YOUR CODE HERE
set.seed(123)
sample_vars = numeric(100)
for (i in 1:100) {
samples_movies = movies2[sample(nrow(movies2), 25),]
sample_vars[i] = var(sample_movies$profits)
}
sample_vars[i] = var(samples_movies$profits)
#WRITE YOUR CODE HERE
set.seed(123)
sample_vars = numeric(100)
for (i in 1:100) {
samples_movies = movies2[sample(nrow(movies2), 25),]
sample_vars[i] = var(samples_movies$profits)
}
head(sample_vars)
#WRITE YOUR CODE HERE
summary(sample_vars)
sd(sample_vars)
ggplot(sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, color = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars) aes(x = sample_vars) +
geom_histogram(bins = 20, color = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(data.frame(sample_vars)), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
data.frame(sample_vars)
ggplot((sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
ggplot(sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
library(ggplot2)
ggplot(sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars), aes(x = sample_vars) +
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
geom_histogram(bins = 20, colour = "black", fill = "skyblue") +
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
data.frame(sample_vars)
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
sample_vars = data.frame(sample_vars)
View(sample_vars)
library(ggplot2)
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 8, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 50, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = diff(range(sample_vars))/20, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = diff(range(sample_vars))/50, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
ggplot(sample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = diff(range(sample_vars))/40, colour = "black", fill = "skyblue") +
labs(title = "Distribution of Sample Variances", x = "Sample Variances", y = "Count")
load("~/GitHub/Assignment-Group-8-QRMII-R/.RData")
View(movies2)
View(actor)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
bruce = movies2[, "first_actor" == "Bruce Willis"]
View(bruce)
#WRITE YOUR CODE HERE
bruce = movies2 %>%
filter(first_actor == "Bruce Willis")
#WRITE YOUR CODE HERE
library(tidyr)
bruce = movies2 %>%
filter(first_actor == "Bruce Willis")
bruce = movies2 %>%
filter(first_actor == "Bruce Willis")
bruce = movies2 %>%
select(first_actor == "Bruce Willis")
bruce = movies2 %>%
select(first_actor == "Bruce Willis")
var_bruce = movies2 %>%
select(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
#WRITE YOUR CODE HERE
library(tidyverse)
var_bruce = movies2 %>%
select(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
var_bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
var_bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
View(var_bruce)
var_gen = movies2 %>%
summarise(var_gen = var(revenue))
View(var_gen)
print(var_bruce)
print(var_gen)
#WRITE YOUR CODE HERE
thriller = movies2 %>%
filter(genre == "Thriller")
View(thriller)
ggplot(movies2, aes(x = quartile, y = profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movie Profits by Quartile", x = "Quartile", y = "Profits")
#computing the mean, standard deviation and plotting the histogram of the sample variances
summary(sample_vars)
#creating a for loop to make different samples with vectors computing the variance
set.seed(123)
sample_vars = numeric(100)
sample_vars[i] = var(samples_movies$profits)
head(sample_vars)
library(readr)
movies2 = read_tsv("movies2.tsv")
#Here I am computing the number of observations, variables and subjects
ncol(movies2)
#Here I am making a new variable called profits
library(tidyr)
library(tidyverse)
movies2 = movies2 %>%
mutate(profits = revenue -budget)
#Here I am computing the minimum, maximum and mean values of the variable profits
summary(movies2$profits)
#Here I am dividing the profits into quartiles as I have to plot a boxplot
movies2$quartile = cut(movies2$profits, breaks = quantile(movies2$profits, probs = c(0, 0.25,0.5, 0.75, 1)), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
#Here I am plotting a boxplot for the profits with quartiles
library(ggplot2)
ggplot(movies2, aes(x = quartile, y = profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movie Profits by Quartile", x = "Quartile", y = "Profits")
#Here I make a new variable with the log transformed profits
movies2 = movies2 %>%
mutate(log_profits = log(profits))
#Here I compute the mean but we were not sure to remove the NAs or not so in the first one we did not remove it and in the second we did to see if we would get different answers
mean(movies2$log_profits)
#Here I put NA instead of the profits that are negative or equal to 0, then I used the same code as before to calculate the logs and then I calculated the mean of the logs of the profits again.
movies2$profits = ifelse(movies2$profits <= 0 , NA, movies2$profits)
movies2 = movies2 %>%
mutate(log_profits = log(profits))
mean(movies2$log_profits, na.rm = T)
#As I have to make a boxplot, I first divided the logs into quartiles
movies2$quartiles = cut(movies2$log_profits, breaks = quantile(movies2$log_profits, probs = c(0, 0.25,0.5, 0.75, 1), na.rm = T), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
# Here I am plotting the boxplot with the log transformed profits with quartiles
ggplot(movies2, aes(x = quartiles, y = log_profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movies Log Transformed Profits", x = "Quartiles", y = "Log of Profits")
ggplot(movies2, aes(x = runtime, y = vote_average)) +
geom_point() +
labs(title = "Scatterplot Movies Average Voting and Runtime", x = "runtime", y = "average voting")
#looking for the actor with the most movies
library(dplyr)
actor = movies2 %>%
count(first_actor, sort = T) %>%
head(1)
print(actor)
#computing the average revenue of Bruce
average_rev_Bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(av_rev_Bruce = mean(revenue))
print(average_rev_Bruce)
#computing the average revenue general
average_rev_generally = movies2 %>%
summarise(rev_gen = mean(revenue))
print(average_rev_generally)
#computing the varience of the subset Bruce of the revenue and the general variance of the full dataset
library(tidyverse)
var_bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
print(var_bruce)
var_gen = movies2 %>%
summarise(var_gen = var(revenue))
print(var_gen)
#recoding profits into millions and calculating the variance of the mean
movies2$profits = movies2$profits/1000000
var_profits = movies2 %>%
summarise(var_profits = var(profits))
print(var_profits)
View(var_profits)
#recoding profits into millions and calculating the variance of the mean
movies2$profits = movies2$profits/1000000
View(movies2)
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
#recoding profits into millions and calculating the variance of the mean
movies2$profits = movies2$profits/1000000
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
#recoding profits into millions and calculating the variance of the mean
movies2$profits = movies2$profits/1000000
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
movies2 = movies2 %>%
mutate(profits = revenue -budget)
#recoding profits into millions and calculating the variance of the mean
movies2$profits = movies2$profits/1000000
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
knitr::opts_chunk$set(echo = TRUE)
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
load("~/GitHub/Assignment-Group-8-QRMII-R/.RData")
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
library(tid)
library(tidyverse)
library(tidyverse)
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
knitr::opts_chunk$set(echo = TRUE)
var_profits2 = var(movies2$profits, na.rm = T)
load("~/GitHub/Assignment-Group-8-QRMII-R/.RData")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
movies2 = read_tsv("movies2.tsv")
#Here I am computing the number of observations, variables and subjects
ncol(movies2)
nrow(movies2)
#Here I am looking at the head of the dataset to determine whether the variables are nominal, ordinal, interval or ratio
head(movies2)
#Here I am making a new variable called profits
library(tidyr)
library(tidyverse)
movies2 = movies2 %>%
mutate(profits = revenue -budget)
#Here I am computing the minimum, maximum and mean values of the variable profits
summary(movies2$profits)
#Here I am making a seperate dataset with 1 variable and 1 observation to see which movie has the highest profits and how much it is.
max_profit_movie = movies2[which.max(movies2$profits), "title"]
print(max_profit_movie)
max_profit = max(movies2$profits)
#Here I am doing the same thing as above but then for the lowest profits
min_profit_movie = movies2[which.min(movies2$profits), "title"]
print(min_profit_movie)
min_profit = min(movies2$profits)
#Here I am dividing the profits into quartiles as I have to plot a boxplot
movies2$quartile = cut(movies2$profits, breaks = quantile(movies2$profits, probs = c(0, 0.25,0.5, 0.75, 1)), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
#Here I am plotting a boxplot for the profits with quartiles
library(ggplot2)
ggplot(movies2, aes(x = quartile, y = profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movie Profits by Quartile", x = "Quartile", y = "Profits")
#Here I make a new variable with the log transformed profits
movies2 = movies2 %>%
mutate(log_profits = log(profits))
#Here I compute the mean but we were not sure to remove the NAs or not so in the first one we did not remove it and in the second we did to see if we would get different answers
mean(movies2$log_profits)
mean(movies2$log_profits, na.rm = T)
#Here I put NA instead of the profits that are negative or equal to 0, then I used the same code as before to calculate the logs and then I calculated the mean of the logs of the profits again.
movies2$profits = ifelse(movies2$profits <= 0 , NA, movies2$profits)
movies2 = movies2 %>%
mutate(log_profits = log(profits))
mean(movies2$log_profits, na.rm = T)
#As I have to make a boxplot, I first divided the logs into quartiles
movies2$quartiles = cut(movies2$log_profits, breaks = quantile(movies2$log_profits, probs = c(0, 0.25,0.5, 0.75, 1), na.rm = T), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
# Here I am plotting the boxplot with the log transformed profits with quartiles
ggplot(movies2, aes(x = quartiles, y = log_profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movies Log Transformed Profits", x = "Quartiles", y = "Log of Profits")
#Here I plot a scatterplot with runtime on x-axis and on the y-axis the vote average
ggplot(movies2, aes(x = runtime, y = vote_average)) +
geom_point() +
labs(title = "Scatterplot Movies Average Voting and Runtime", x = "runtime", y = "average voting")
#looking for the actor with the most movies
library(dplyr)
actor = movies2 %>%
count(first_actor, sort = T) %>%
head(1)
print(actor)
#computing the average revenue of Bruce
average_rev_Bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(av_rev_Bruce = mean(revenue))
print(average_rev_Bruce)
#computing the average revenue general
average_rev_generally = movies2 %>%
summarise(rev_gen = mean(revenue))
print(average_rev_generally)
#computing the varience of the subset Bruce of the revenue and the general variance of the full dataset
library(tidyverse)
var_bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
print(var_bruce)
var_gen = movies2 %>%
summarise(var_gen = var(revenue))
print(var_gen)
var_profits2 = var(movies2$profits, na.rm = T)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
movies2 = read_tsv("movies2.tsv")
#Here I am computing the number of observations, variables and subjects
ncol(movies2)
nrow(movies2)
#Here I am looking at the head of the dataset to determine whether the variables are nominal, ordinal, interval or ratio
head(movies2)
#Here I am making a new variable called profits
library(tidyr)
library(tidyverse)
movies2 = movies2 %>%
mutate(profits = revenue -budget)
#Here I am computing the minimum, maximum and mean values of the variable profits
summary(movies2$profits)
#Here I am making a seperate dataset with 1 variable and 1 observation to see which movie has the highest profits and how much it is.
max_profit_movie = movies2[which.max(movies2$profits), "title"]
print(max_profit_movie)
max_profit = max(movies2$profits)
#Here I am doing the same thing as above but then for the lowest profits
min_profit_movie = movies2[which.min(movies2$profits), "title"]
print(min_profit_movie)
min_profit = min(movies2$profits)
#Here I am dividing the profits into quartiles as I have to plot a boxplot
movies2$quartile = cut(movies2$profits, breaks = quantile(movies2$profits, probs = c(0, 0.25,0.5, 0.75, 1)), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
#Here I am plotting a boxplot for the profits with quartiles
library(ggplot2)
ggplot(movies2, aes(x = quartile, y = profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movie Profits by Quartile", x = "Quartile", y = "Profits")
#Here I make a new variable with the log transformed profits
movies2 = movies2 %>%
mutate(log_profits = log(profits))
#Here I compute the mean but we were not sure to remove the NAs or not so in the first one we did not remove it and in the second we did to see if we would get different answers
mean(movies2$log_profits)
mean(movies2$log_profits, na.rm = T)
#Here I put NA instead of the profits that are negative or equal to 0, then I used the same code as before to calculate the logs and then I calculated the mean of the logs of the profits again.
movies2$profits = ifelse(movies2$profits <= 0 , NA, movies2$profits)
movies2 = movies2 %>%
mutate(log_profits = log(profits))
mean(movies2$log_profits, na.rm = T)
#As I have to make a boxplot, I first divided the logs into quartiles
movies2$quartiles = cut(movies2$log_profits, breaks = quantile(movies2$log_profits, probs = c(0, 0.25,0.5, 0.75, 1), na.rm = T), labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = T)
# Here I am plotting the boxplot with the log transformed profits with quartiles
ggplot(movies2, aes(x = quartiles, y = log_profits)) +
geom_boxplot() +
labs(title = "Boxplot of Movies Log Transformed Profits", x = "Quartiles", y = "Log of Profits")
#Here I plot a scatterplot with runtime on x-axis and on the y-axis the vote average
ggplot(movies2, aes(x = runtime, y = vote_average)) +
geom_point() +
labs(title = "Scatterplot Movies Average Voting and Runtime", x = "runtime", y = "average voting")
#looking for the actor with the most movies
library(dplyr)
actor = movies2 %>%
count(first_actor, sort = T) %>%
head(1)
print(actor)
#computing the average revenue of Bruce
average_rev_Bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(av_rev_Bruce = mean(revenue))
print(average_rev_Bruce)
#computing the average revenue general
average_rev_generally = movies2 %>%
summarise(rev_gen = mean(revenue))
print(average_rev_generally)
#computing the varience of the subset Bruce of the revenue and the general variance of the full dataset
library(tidyverse)
var_bruce = movies2 %>%
filter(first_actor == "Bruce Willis") %>%
summarise(var_bruce = var(revenue))
print(var_bruce)
var_gen = movies2 %>%
summarise(var_gen = var(revenue))
print(var_gen)
#recoding profits into millions and calculating the variance of the mean
movies2$profits = movies2$profits/1000000
library(tidyverse)
var_profits = movies2 %>%
summarise(var_profits = var(profits, na.rm = T))
print(var_profits)
var_profits2 = var(movies2$profits, na.rm = T)
print(var_profits2)
#creation of a sample of 25 movies, new data set and computing the variance of this sample
set.seed(123)
movies_sample = movies2[sample(nrow(movies2), 25),]
var_sample_profits = var(movies2$profits)
View(movies_sample)
print(var_sample_profits)
var_sample_profits = var(movies_sample$profits)
print(var_sample_profits)
var_sample_profits = var(movies_sample$profits, na.rm =T)
print(var_sample_profits)
